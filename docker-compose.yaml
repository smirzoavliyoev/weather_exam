version: "3.8"

services:
  api_service:
    container_name: api_service_container
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.api_service
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - redis
      - jaeger
      - worker_service
    networks: [ "microservices" ]
  worker_service:
    container_name: worker_service_container
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.worker_service
    restart: always
    depends_on:
      - redis
      - jaeger
    networks: [ "microservices" ]
  redis:
    image: redis:latest
    restart: always
    container_name: microservices_redis
    ports:
      - "6379:6379"
    networks: [ "microservices" ]
  jaeger:
    container_name: jaeger_container
    restart: always
    image: jaegertracing/all-in-one:1.21
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
      - SPAN_STORAGE_TYPE=badger
      - BADGER_EPHEMERAL=false
      - BADGER_DIRECTORY_VALUE=/badger/data
      - BADGER_DIRECTORY_KEY=/badger/key
    volumes:
      - ./jaeger:/badger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    networks: [ "microservices" ]
volumes:
  jaeger:
networks:
  microservices:
    name: microservices